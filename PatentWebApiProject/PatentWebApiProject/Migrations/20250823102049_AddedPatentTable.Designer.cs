// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatentWebApiProject.Data;

#nullable disable

namespace PatentWebApiProject.Migrations
{
    [DbContext(typeof(PatentContext))]
    [Migration("20250823102049_AddedPatentTable")]
    partial class AddedPatentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MembersPatent", b =>
                {
                    b.Property<int>("membersmemId")
                        .HasColumnType("int");

                    b.Property<int>("patentspatentId")
                        .HasColumnType("int");

                    b.HasKey("membersmemId", "patentspatentId");

                    b.HasIndex("patentspatentId");

                    b.ToTable("MembersPatent", (string)null);
                });

            modelBuilder.Entity("PatentWebApiProject.Models.InternationalPatent", b =>
                {
                    b.Property<int>("ipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ipId"));

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fieledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("patentId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ipId");

                    b.HasIndex("patentId");

                    b.ToTable("inPatents");

                    b.HasData(
                        new
                        {
                            ipId = 501,
                            country = "US",
                            fieledDate = new DateTime(2025, 6, 21, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            patentId = 101,
                            status = "Pending"
                        });
                });

            modelBuilder.Entity("PatentWebApiProject.Models.Members", b =>
                {
                    b.Property<int>("memId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("memId"));

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("memId");

                    b.ToTable("members");

                    b.HasData(
                        new
                        {
                            memId = 1,
                            city = "Chennai",
                            createdAt = new DateTime(2024, 8, 21, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "janu@gmail.com",
                            name = "Janu",
                            role = "user"
                        },
                        new
                        {
                            memId = 2,
                            city = "Chennai",
                            createdAt = new DateTime(2024, 8, 21, 10, 5, 0, 0, DateTimeKind.Unspecified),
                            email = "lali@gmail.com",
                            name = "Laith",
                            role = "user"
                        });
                });

            modelBuilder.Entity("PatentWebApiProject.Models.Patent", b =>
                {
                    b.Property<int>("patentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("patentId"));

                    b.Property<DateTime>("appliedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("patentId");

                    b.ToTable("patents");

                    b.HasData(
                        new
                        {
                            patentId = 101,
                            appliedDate = new DateTime(2024, 9, 21, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "AI-powered biomedical cancer detection system",
                            status = "Pending",
                            title = "Cancer Detection Patent"
                        },
                        new
                        {
                            patentId = 102,
                            appliedDate = new DateTime(2024, 9, 21, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            description = "Novel vaccine delivery method",
                            status = "Pending",
                            title = "Vaccine Delivery Patent"
                        });
                });

            modelBuilder.Entity("PatentWebApiProject.Models.PatentGrants", b =>
                {
                    b.Property<int>("grantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("grantId"));

                    b.Property<string>("domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("grantDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ipId")
                        .HasColumnType("int");

                    b.Property<int?>("patentId")
                        .HasColumnType("int");

                    b.Property<int?>("score")
                        .HasColumnType("int");

                    b.HasKey("grantId");

                    b.HasIndex("ipId");

                    b.HasIndex("patentId");

                    b.ToTable("grants", t =>
                        {
                            t.HasCheckConstraint("CK_PatentGrant_PatentAndIP", "patentId IS NOT NULL AND ipId IS NOT NULL");
                        });

                    b.HasData(
                        new
                        {
                            grantId = 1001,
                            domain = "Biomedical",
                            grantDate = new DateTime(2025, 4, 21, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ipId = 501,
                            patentId = 101,
                            score = 7
                        });
                });

            modelBuilder.Entity("MembersPatent", b =>
                {
                    b.HasOne("PatentWebApiProject.Models.Members", null)
                        .WithMany()
                        .HasForeignKey("membersmemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatentWebApiProject.Models.Patent", null)
                        .WithMany()
                        .HasForeignKey("patentspatentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatentWebApiProject.Models.InternationalPatent", b =>
                {
                    b.HasOne("PatentWebApiProject.Models.Patent", "patent")
                        .WithMany()
                        .HasForeignKey("patentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("patent");
                });

            modelBuilder.Entity("PatentWebApiProject.Models.PatentGrants", b =>
                {
                    b.HasOne("PatentWebApiProject.Models.InternationalPatent", "internationalPatent")
                        .WithMany("patentGrants")
                        .HasForeignKey("ipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PatentWebApiProject.Models.Patent", "patent")
                        .WithMany("patentGrants")
                        .HasForeignKey("patentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("internationalPatent");

                    b.Navigation("patent");
                });

            modelBuilder.Entity("PatentWebApiProject.Models.InternationalPatent", b =>
                {
                    b.Navigation("patentGrants");
                });

            modelBuilder.Entity("PatentWebApiProject.Models.Patent", b =>
                {
                    b.Navigation("patentGrants");
                });
#pragma warning restore 612, 618
        }
    }
}
